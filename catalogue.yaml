   - name: "setup for catalogue server"
     hosts: catalogue
     become: yes
     tasks:
       - name: "disable version"
         ansible.builtin.command: dnf module disable nodejs -y
       - name: "enable version"
         ansible.builtin.command: dnf module enable nodejs:20 -y
       - name: "install node js"
         ansible.builtin.package:
           name: nodejs
           state: present

       - name: "creating system user"
         ansible.builtin.user:
           name: roboshop
           comment: "roboshop system user"
           system: true
           shell: /sbin/nologin
           home: /app
### deleting the directory if we run second time it will delete the folder and creates new
       - name: remove app directory
         ansible.builtin.file:
          path: /app
          state: absent

       - name: "Create app directory"
         ansible.builtin.file:
           path: /app
           state: directory

       - name: Delete catalogue file
         ansible.builtin.file:
          path: /tmp/catalogue.zip
          state: absent
       - name: "download application code"
         ansible.builtin.get_url:
          url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
          dest: /tmp/catalogue.zip

       - name: Unarchive a file that is already on the remote machine
         ansible.builtin.unarchive:
           src: /tmp/catalogue.zip
           dest: /app
           remote_src: yes
       - name: install dependencies
         community.general.npm:
           path: /app
       - name: "copying service file"
         ansible.builtin.copy:
          src: catalogue.service
          dest: /etc/systemd/system/catalogue.service

       - name: "copying mongo repo"
         ansible.builtin.copy:
          src: mongo.repo
          dest: /etc/yum.repos.d/mongo.repo

       - name: "installing mongodb client"
         ansible.builtin.package:
           name: mongodb-mongosh
           state: present
       - name: "loading data "
         ansible.builtin.shell: mongosh mongodb.saws86s.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
         register: catalogue_data

      # - name: "print output"
       #  ansible.builtin.debug:
       #   msg: "{{ catalogue_data }}"
       - name: load products into mongodb
         ansible.builtin.shell: mongosh --host mongodb.saws86s.fun </app/db/master-data.js
         when: catalogue_data.stdout | int < 0

       - name: daemon reload enable and start
         ansible.builtin.systemd_service:
           name: catalogue
           enabled: true
           state: started
           daemon_reload: true